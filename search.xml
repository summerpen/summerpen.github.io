<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关闭页面时向后台发送消息(sendBeacon+koa2)</title>
      <link href="/2021/08/18/koa2-sendbeacon/"/>
      <url>/2021/08/18/koa2-sendbeacon/</url>
      
        <content type="html"><![CDATA[<h3 id="在用户关闭页面的时候，前端要给后台发一条请求，释放该页面的授权占用"><a href="#在用户关闭页面的时候，前端要给后台发一条请求，释放该页面的授权占用" class="headerlink" title="在用户关闭页面的时候，前端要给后台发一条请求，释放该页面的授权占用"></a>在用户关闭页面的时候，前端要给后台发一条请求，释放该页面的授权占用</h3><h3 id="使用-navigator-sendBeacon"><a href="#使用-navigator-sendBeacon" class="headerlink" title="使用 navigator.sendBeacon()"></a>使用 navigator.sendBeacon()</h3><ul><li>这个方法主要用于满足统计和诊断代码的需要，这些代码通常尝试在卸载（unload）文档之前向web服务器发送数据</li><li>用法<br><code>navigator.sendBeacon(url, data);</code></li></ul><p><code>url</code> 表明 <code>data</code> 将要被发送到的网络地址<br><code>data</code> 参数是将要发送的 <code>ArrayBufferView</code> 或 <code>Blob</code> 、 <code>DOMString</code> (js中即string) 或者 <code>FormData</code> 类型的数据。</p><ul><li>返回值<br>当用户代理成功把数据加入传输队列时，sendBeacon() 方法将会返回 <code>true</code> ，否则返回 <code>false</code> 。</li></ul><h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h3><pre class=" language-js"><code class="language-js">window<span class="token punctuation">.</span>beginTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//执行onbeforeunload的开始时间</span>window<span class="token punctuation">.</span>differTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//时间差</span>window<span class="token punctuation">.</span>onbeforeunload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span>beginTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>onunload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span>differTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> window<span class="token punctuation">.</span>beginTime<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>differTime <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"浏览器关闭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">"loginout关闭页面"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span><span class="token function">sendBeacon</span><span class="token punctuation">(</span>            <span class="token string">"http://127.0.0.1:3000/loginout"</span><span class="token punctuation">,</span>            JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"浏览器刷新页面操作"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="node-js代码"><a href="#node-js代码" class="headerlink" title="node.js代码"></a>node.js代码</h3><ul><li><p>在一个空白目录下 <code>npm init -y</code> 生成package.json 然后安装依赖 <code>npm i koa koa-router koa-bodyparser co-body -S</code></p></li><li><p>在该目录下新建app.js </p></li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"koa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"koa-router"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"koa-bodyparser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> coBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"co-body"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">bodyParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 此处接口做了兼容, 可以处理中正常post请求, 以及 navigator.sendBeacon的调用</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"/loginout"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// url路径传入 ?json=true ( http://127.0.0.1:3000/loginout?isJson=true),代表传入json格式 (可用postman 使用post请求)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ctx<span class="token punctuation">.</span>query<span class="token punctuation">.</span>isJson<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token keyword">await</span> coBody<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> params<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// text/plain格式 (可用postman 使用post请求, 或者在页面中执行 前端代码中的navigator.sendBeacon)</span>        <span class="token comment" spellcheck="true">//http://127.0.0.1:3000/api/loginout</span>        <span class="token comment" spellcheck="true">// navigator.sendBeacon('http://localhost:3000/loginout','{"a":9}')</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"server started at http:localhost:3000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>启动服务 <code>node app.js</code>, 如果全局安装了pm2, 也可使用 <code>pm2 start app.js</code></li></ul><h3 id="进行测试该功能"><a href="#进行测试该功能" class="headerlink" title="进行测试该功能"></a>进行测试该功能</h3><ol><li>在项目中执行前端代码,观察node服务日志</li><li>也可以在postman中执行接口调用,查看node服务日志</li></ol><ul><li>测试效果<br><img src="/images/koa2+sendBeacon.gif" alt></li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ol><li><a href="https://blog.wangpengpeng.site/2020/06/19/js%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E5%85%B3%E9%97%AD%E4%B8%8E%E5%88%B7%E6%96%B0/#%E6%9C%80%E7%BB%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">js判断浏览器窗口的关闭与刷新</a></li><li><a href="https://juejin.cn/post/6997016317635084319" target="_blank" rel="noopener">你知道关闭页面时怎么向后台发送消息吗？</a></li><li><a href="https://stackoverflow.com/questions/31355128/how-to-receive-data-posted-by-navigator-sendbeacon-on-node-js-server" target="_blank" rel="noopener">stack overflow: How to receive data posted by “navigator.sendbeacon” on node.js server?</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli3+ media处理</title>
      <link href="/2021/07/15/vue-cli-media-chu-li/"/>
      <url>/2021/07/15/vue-cli-media-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-cli3-media处理"><a href="#vue-cli3-media处理" class="headerlink" title="vue-cli3+ media处理"></a>vue-cli3+ media处理</h1><h3 id="项目中需要对mp4文件进行处理-记录使用到的问题"><a href="#项目中需要对mp4文件进行处理-记录使用到的问题" class="headerlink" title="项目中需要对mp4文件进行处理, 记录使用到的问题"></a>项目中需要对mp4文件进行处理, 记录使用到的问题</h3><ul><li>原先的处理方式 <code>处理后不能显示视频</code></li></ul><pre class=" language-js"><code class="language-js">  <span class="token comment" spellcheck="true">// vue.config.js</span>  chainWebpack<span class="token punctuation">:</span> config <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 解析文件</span>      config<span class="token punctuation">.</span>module          <span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token regex">/\.(mp4|webm|ogg|mp3|wav|flac|aac|mov)(\?.*)?$/</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token regex">/\.(mp4|webm|ogg|mp3|wav|flac|aac|mov)(\?.*)?$/</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"url-loader"</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">"url-loader"</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> </code></pre><ul><li><p>修改后的处理方式</p><pre class=" language-js"><code class="language-js">chainWebpack<span class="token punctuation">:</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">"prefetch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* const urlLoader = config.module.rule("images");  // 清除已有的所有 loader。  // 如果你不这样做，接下来的 loader 会附加在该规则现有的 loader 之后。  urlLoader.uses.clear();  // 添加要替换的 loader  urlLoader    .test(/\.(png|jpe?g|gif|svg)(\?.*)?$/)    .use("url-loader")    .loader("url-loader")    .options({      limit: 1024 * 8, // 8k      name: "static/img/[name].[hash:8].[ext]", // 利用[path]路径获取文件夹名称并设置文件名      fallback: "file-loader", // 当超过8192byte时，会回退使用file-loader      context: path.resolve(__dirname, "./src"), //过滤掉[path]的相对路径      // publicPath: "", //采用根路径      esModule: false,    }); */</span>  <span class="token keyword">const</span> mediaUrlLoader <span class="token operator">=</span> config<span class="token punctuation">.</span>module<span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token string">"media"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mediaUrlLoader<span class="token punctuation">.</span>uses<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 添加要替换的 loader</span>  mediaUrlLoader    <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token regex">/\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"url-loader"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">"url-loader"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      limit<span class="token punctuation">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 8k</span>      name<span class="token punctuation">:</span> <span class="token string">"static/media/[name].[hash:8].[ext]"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 设置文件名  ---------需要修改成你自己项目的路径,名称 </span>      <span class="token comment" spellcheck="true">// name: "[path][name].[hash:8].[ext]", // 设置文件名</span>      fallback<span class="token punctuation">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 当超过8192byte时，会回退使用file-loader</span>      context<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//过滤掉[path]的相对路径</span>      esModule<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios参数处理</title>
      <link href="/2019/12/09/axios-shang-song-form-data-can-shu-chu-li/"/>
      <url>/2019/12/09/axios-shang-song-form-data-can-shu-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Axios上送Form-Data参数处理"><a href="#Axios上送Form-Data参数处理" class="headerlink" title="Axios上送Form Data参数处理"></a>Axios上送Form Data参数处理</h1><h3 id="axios-上送-formData-格式处理的几种方式"><a href="#axios-上送-formData-格式处理的几种方式" class="headerlink" title="axios 上送 formData 格式处理的几种方式"></a>axios 上送 formData 格式处理的几种方式</h3><ul><li>后台接口需要上送 jsonString={user_id:’’, pd:’’, } 这种格式的参数</li></ul><blockquote><p>在网上找了几种方法, Form Data 均上送不对,<br>找到的方式如下:</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//直接qs.stringify,上传参数不对:  如图1</span>    <span class="token comment" spellcheck="true">//    {"0":"t","1":"i","2":"m","3":"e","4":"F","5":"r","6":"o","7":"m","8":": (unable to decode value)</span>    <span class="token comment" spellcheck="true">// ","35":"t","36":"i","37":"m","38":"e","39":"T","40":"o","41":": (unable to decode value)</span>    <span class="token comment" spellcheck="true">// ","68":"u","69":"s","70":"e","71":"r","72":"_","73":"i","74":"d","75":": ","76":"</span>    <span class="token comment" spellcheck="true">// ","77":"p","78":"d","79":": "}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2.</span><span class="token keyword">let</span> jsonString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jsonString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"user_id"</span><span class="token punctuation">,</span> <span class="token string">"***"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jsonString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"pd"</span><span class="token punctuation">,</span> <span class="token string">"***"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// data: jsonString //参数 不带 jsonString= ,不能使用</span>    data<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`jsonString=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>jsonString<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span> <span class="token comment" spellcheck="true">//参数不对, Form Data 变成了{"0":"j","1":"s","2":"o","3":"n","4":"S","5":"t","6":"r","7":"i","8":"n","9":"g","10":": ","11":"[","12":"o","13":"b","14":"j","15":"e","16":"c","17":"t","18":" ","19":"O","20":"b","21":"j","22":"e","23":"c","24":"t","25":"]"}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/images/axios1.png" alt="图1"></p><blockquote><p>研究后, 可以使用的其他方式:</p></blockquote><ul><li>方法 1: 使用 axios.create</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//在script顶部引入qs,axios</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  使用axios.create</span><span class="token comment" spellcheck="true">// 先create</span>axios_ <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>    user_id<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">,</span>    pd<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 使用 create后的axios_</span><span class="token function">axios_</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token punctuation">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span>        method<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> <span class="token string">"jsonString="</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>方法 2: 使用 qs 将参数拼接到 url 后边,不太推荐此方法.post请求后拼接请求参数,看着比较奇怪</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 方法2:</span><span class="token comment" spellcheck="true">//在script顶部引入qs,axios</span><span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">"qs"</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>    user_id<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">,</span>    pd<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$api<span class="token punctuation">.</span>CustomGroupPageInfo <span class="token operator">+</span>        <span class="token string">"?"</span> <span class="token operator">+</span>        qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            jsonString<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>方法 3: 使用 qs 处理 data 参数</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//在script顶部引入qs,axios</span><span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">"qs"</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span><span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>    user_id<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">,</span>    pd<span class="token punctuation">:</span> <span class="token string">"***"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> params<span class="token punctuation">,</span>    transformRequest<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            data <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                jsonString<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> data<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用浅克隆对highCharts图例进行排序</title>
      <link href="/2019/08/13/shi-yong-qian-ke-long-dui-highcharts-tu-li-jin-xing-pai-xu/"/>
      <url>/2019/08/13/shi-yong-qian-ke-long-dui-highcharts-tu-li-jin-xing-pai-xu/</url>
      
        <content type="html"><![CDATA[<h3 id="highcharts图例排序"><a href="#highcharts图例排序" class="headerlink" title="highcharts图例排序"></a>highcharts图例排序</h3><blockquote><p>工作中有需求, 需要pie图图例进行排序, 但图表的顺序不能改变<br>看了下highcharts文档API找到了legendIndex, 可以实现对legend图例进行排序<br>主要代码如下  </p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Edge'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">4.67</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Internet Explorer'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">11.84</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Firefox'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">10.85</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Safari'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">4.18</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Chrome'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">61.41</span><span class="token punctuation">,</span>        sliced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        selected<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Other'</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token number">7.05</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* -------------- 核心操作  -------------- */</span><span class="token comment" spellcheck="true">//对 对象数组进行浅克隆</span><span class="token keyword">var</span> tmp <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//对克隆后数组进行排序</span>tmp<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> b<span class="token punctuation">.</span>y <span class="token operator">-</span> a<span class="token punctuation">.</span>y<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 对克隆后数组添加legendIndex属性, </span><span class="token comment" spellcheck="true">// tmp中每个元素与data中对相应的元素,均为对象,执行同一个地址</span><span class="token comment" spellcheck="true">// 因而data中每个对象也会有legendIndex属性,并按其y属性进行了排序</span>tmp<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    item<span class="token punctuation">.</span>legendIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>    <span class="token keyword">return</span> item<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>Highcharts<span class="token punctuation">.</span><span class="token function">chart</span><span class="token punctuation">(</span><span class="token string">'container'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    chart<span class="token punctuation">:</span> <span class="token punctuation">{</span>        plotBackgroundColor<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        plotBorderWidth<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        plotShadow<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'pie'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    credits<span class="token punctuation">:</span> <span class="token punctuation">{</span>        enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    title<span class="token punctuation">:</span> <span class="token punctuation">{</span>        text<span class="token punctuation">:</span> <span class="token string">'2018年浏览器市场份额'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>        pointFormat<span class="token punctuation">:</span> <span class="token string">'{series.name}: &lt;b>{point.percentage:.1f}%&lt;/b>'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>        layout<span class="token punctuation">:</span> <span class="token string">'vertical'</span><span class="token punctuation">,</span>        align<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>        floating<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plotOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        pie<span class="token punctuation">:</span> <span class="token punctuation">{</span>            allowPointSelect<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            cursor<span class="token punctuation">:</span> <span class="token string">'pointer'</span><span class="token punctuation">,</span>            dataLabels<span class="token punctuation">:</span> <span class="token punctuation">{</span>                enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            showInLegend<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'Brands'</span><span class="token punctuation">,</span>        colorByPoint<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> data    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><ul><li>图示如下</li></ul><blockquote><p>浅克隆及后续处理后, data与tmp的对比</p></blockquote><p><img src="/images/highCharts3.png" alt></p><ul><li>未对data进行浅克隆处理前的图表, 图例</li></ul><p><img src="/images/highCharts1.png" alt></p><ul><li>对data进行浅克隆处理后的图表, 图例已按照legendIndex进行了排序</li></ul><p><img src="/images/highCharts2.png" alt></p><ul><li>THE END</li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS, HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模态框封装并支持拖拽</title>
      <link href="/2019/06/18/mo-tai-kuang-zu-jian-feng-zhuang/"/>
      <url>/2019/06/18/mo-tai-kuang-zu-jian-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<h3 id="封装模态框组件-并支持PC端拖动"><a href="#封装模态框组件-并支持PC端拖动" class="headerlink" title="封装模态框组件,并支持PC端拖动"></a>封装模态框组件,并支持PC端拖动</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>模态框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">* </span><span class="token punctuation">{</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">html,        body </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.mengban</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">29</span>, <span class="token number">26</span>, <span class="token number">165</span>, <span class="token number">0.178</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.alert</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">35%</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">10</span>px <span class="token number">10</span>px gray<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">241</span>, <span class="token number">240</span>, <span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.a-close</span> </span><span class="token punctuation">{</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> Alert <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//没有数据,直接返回</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//设置内容</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> data<span class="token punctuation">.</span>content<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建提示框面板</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mengban <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>panel <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建提示框title组件</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>titleNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建提示框内容组件</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>contentNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建提示框确定按钮组件</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>confirmBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建提示框关闭按钮组件</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>closeBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'mengban'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'alert'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>closeBtn<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'a-close'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>confirmBtn<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'a-confirm'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>titleNode<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'提示'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>confirmBtn<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">.</span>confirm <span class="token operator">||</span> <span class="token string">'确认'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>closeBtn<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">.</span>close <span class="token operator">||</span> <span class="token string">'取消'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>contentNode<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//确定按钮执行方法</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>success <span class="token operator">=</span> data<span class="token punctuation">.</span>success <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//关闭按钮执行方法</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fail <span class="token operator">=</span> data<span class="token punctuation">.</span>fail <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Alert<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>            init<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>titleNode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>contentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>confirmBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>closeBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            bindEvent<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> me <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>closeBtn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    me<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    me<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>confirmBtn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    me<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    me<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">.</span>onmousedown <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    me<span class="token punctuation">.</span><span class="token function">drag</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//点击蒙版,隐藏弹窗 //TODO:bug待修复</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">.</span>onmousedown <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// me.hide(); </span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            hide<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            show<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>mengban<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            drag<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">;</span>                element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">"move"</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>                <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>panel<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里的this指向element对象</span>                <span class="token comment" spellcheck="true">//获取鼠标点击位置相对于窗体left和top的位移</span>                <span class="token keyword">var</span> diffX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>                <span class="token keyword">var</span> diffY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//鼠标移动事件</span>                document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onmousemove'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//在移动过程中窗体的offsetLeft、offsetTop会随着事件触发位置的e.clientX、e.clientY变化而变化，但diffX、diffY是固定不变的</span>                    <span class="token comment" spellcheck="true">//故使用e.clientX - diffX可以获取移动后窗体的left值，top值同理</span>                    <span class="token keyword">var</span> left <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> diffX<span class="token punctuation">;</span>                    <span class="token keyword">var</span> top <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> diffY<span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//设置移动的位置不得超过浏览器的边缘</span>                    <span class="token comment" spellcheck="true">//使用offsetWidth、offsetHeight可以获得窗体自身的宽度、高度</span>                    <span class="token comment" spellcheck="true">//窗体距左的偏移量加上窗体自身的宽度不超过浏览器的宽度</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">></span> window<span class="token punctuation">.</span>InnerWidth <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        left <span class="token operator">=</span> window<span class="token punctuation">.</span>InnerWidth <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//窗体距上的偏移量加上窗体自身的高度不超过浏览器的高度</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">></span> window<span class="token punctuation">.</span>InnerHeight <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        top <span class="token operator">=</span> window<span class="token punctuation">.</span>InnerHeight <span class="token operator">-</span> that<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">//设置窗体移动后的偏移量</span>                    that<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>                    that<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//鼠标放开事件</span>                document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'onmouseup'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//清空事件</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里的this指向document对象</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> mAlert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Alert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            content<span class="token punctuation">:</span> <span class="token string">'是否继续该操作'</span><span class="token punctuation">,</span>            confirm<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            fail<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        mAlert<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三栏布局</title>
      <link href="/2019/05/21/san-lan-bu-ju/"/>
      <url>/2019/05/21/san-lan-bu-ju/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要讲解左右两栏固定宽度,中间部分自适应的几种布局实现方式</p></blockquote><h4 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h4><blockquote><p>在这里，实现了左(200px) 右(220px) 宽度固定，中间自适应，container部分高度保持一致。<br>html代码中  middle部分首先要放在container的最前部分。然后是left,right</p></blockquote><ol><li><p>将三者都 float:left , 再加上一个position:relative (因为相对定位后面会用到）</p></li><li><p>middle部分 width:100%占满</p></li><li><p>此时middle占满了，所以要把left拉到最左边，使用margin-left:-100%</p></li><li><p>这时left拉回来了，但会覆盖middle内容的左端，要把middle内容拉出来，所以在外围container加上 padding:0 220px 0 200px</p></li><li><p>middle内容拉回来了，但left也跟着过来了，所以要还原，就对left使用相对定位 left:-200px  同理，right也要相对定位还原 right:-220px</p></li><li><p>到这里大概就自适应好了。如果想container高度保持一致可以给left middle right都加上min-height:130px<br>代码如下:</p><pre class=" language-js"><code class="language-js"> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 圣杯布局CSS <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">*</span> <span class="token punctuation">{</span>     margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>     padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> body <span class="token punctuation">{</span>     min<span class="token operator">-</span>width<span class="token punctuation">:</span> 700px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>header<span class="token punctuation">,</span> <span class="token punctuation">.</span>footer <span class="token punctuation">{</span>     border<span class="token punctuation">:</span> 1px solid #<span class="token number">333</span><span class="token punctuation">;</span>     background<span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>     text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token punctuation">.</span>middle<span class="token punctuation">,</span> <span class="token punctuation">.</span>right <span class="token punctuation">{</span>     position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>     float<span class="token punctuation">:</span> left<span class="token punctuation">;</span>     min<span class="token operator">-</span>height<span class="token punctuation">:</span> 130px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>container <span class="token punctuation">{</span>     padding<span class="token punctuation">:</span> <span class="token number">0</span> 220px <span class="token number">0</span> 200px<span class="token punctuation">;</span>     overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>left <span class="token punctuation">{</span>     margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     left<span class="token punctuation">:</span> <span class="token operator">-</span>200px<span class="token punctuation">;</span>     width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>     background<span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>right <span class="token punctuation">{</span>     margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span>220px<span class="token punctuation">;</span>     right<span class="token punctuation">:</span> <span class="token operator">-</span>220px<span class="token punctuation">;</span>     width<span class="token punctuation">:</span> 220px<span class="token punctuation">;</span>     background<span class="token punctuation">:</span> green<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>middle <span class="token punctuation">{</span>     width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     background<span class="token punctuation">:</span> blue<span class="token punctuation">;</span>     word<span class="token operator">-</span><span class="token keyword">break</span><span class="token punctuation">:</span> <span class="token keyword">break</span><span class="token operator">-</span>all<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>footer <span class="token punctuation">{</span>     clear<span class="token punctuation">:</span> both<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 圣杯布局HTML <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>header<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>h4<span class="token operator">></span>middle<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>         <span class="token operator">&lt;</span>p<span class="token operator">></span>HHHHHHHHHHHHHHHHHHHHHH             hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh             HHHHHHHHHHHHHHHHHHHHHH             hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh         <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>h4<span class="token operator">></span>left<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>         <span class="token operator">&lt;</span>p<span class="token operator">></span>oooooooooooooo             <span class="token number">00000000000000000</span>             ooooooooooooooo             ooooooooooooooo             <span class="token number">000000000000000</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>h4<span class="token operator">></span>right<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>         <span class="token operator">&lt;</span>p<span class="token operator">></span>BBBBBBBBBBBBBB             BBBBBBBBBBBBBBBBBB             <span class="token number">88888888888888888888</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"footer"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>footer<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre></li></ol><h4 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h4><blockquote><p>与上边的圣杯布局实现的效果;类似<br>   左翅sub有200px,右翅extra..220px.. 身体main自适应未知</p></blockquote><ol><li><p>html代码中，main要放最前边，sub  extra</p></li><li><p>将main  sub  extra 都float:left</p></li><li><p>将main占满 width:100%</p></li><li><p>此时main占满了，所以要把sub拉到最左边，使用margin-left:-100%  同理 extra使用margin-left:-220px</p></li></ol><p>（这时可以直接继续上边圣杯布局的步骤，也可以有所改动）</p><ol start="5"><li>main内容被覆盖了吧，除了使用外围的padding，还可以考虑使用margin。</li></ol><p>给main增加一个内层div– main-inner, 然后margin:0 220px 0 200px</p><ol start="6"><li><p>main正确展示<br>代码如下:</p><pre class=" language-js"><code class="language-js"> <span class="token comment" spellcheck="true">/* 双飞翼布局 */</span> <span class="token punctuation">.</span>header1<span class="token punctuation">,</span> <span class="token punctuation">.</span>footer1 <span class="token punctuation">{</span>     border<span class="token punctuation">:</span> 1px solid #<span class="token number">333</span><span class="token punctuation">;</span>     background<span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>     text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>sub<span class="token punctuation">,</span> <span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token punctuation">.</span>extra <span class="token punctuation">{</span>     float<span class="token punctuation">:</span> left<span class="token punctuation">;</span>     min<span class="token operator">-</span>height<span class="token punctuation">:</span> 130px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>sub <span class="token punctuation">{</span>     margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>     background<span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>extra <span class="token punctuation">{</span>     margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span>220px<span class="token punctuation">;</span>     width<span class="token punctuation">:</span> 220px<span class="token punctuation">;</span>     background<span class="token punctuation">:</span> blue<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>main <span class="token punctuation">{</span>     width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>main<span class="token operator">-</span>inner <span class="token punctuation">{</span>     margin<span class="token operator">-</span>left<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>     margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 220px<span class="token punctuation">;</span>     min<span class="token operator">-</span>height<span class="token punctuation">:</span> 130px<span class="token punctuation">;</span>     background<span class="token punctuation">:</span> green<span class="token punctuation">;</span>     word<span class="token operator">-</span><span class="token keyword">break</span><span class="token punctuation">:</span> <span class="token keyword">break</span><span class="token operator">-</span>all<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">.</span>footer1 <span class="token punctuation">{</span>     clear<span class="token punctuation">:</span> both<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 双飞翼布局 <span class="token operator">--</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header1"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>header<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main-inner"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>h4<span class="token operator">></span>main<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>         <span class="token operator">&lt;</span>p<span class="token operator">></span>HHHHHHHHHHHHHHHHHHHHHH             hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh             HHHHHHHHHHHHHHHHHHHHHH             hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh         <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sub"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>sub<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>     <span class="token operator">&lt;</span>p<span class="token operator">></span>oooooooooooooo         <span class="token number">0000000000000000</span>         <span class="token number">00000000000000000</span>         ooooooooooooooo         ooooooooooooooo         <span class="token number">000000000000000</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"extra"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>extra<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>     <span class="token operator">&lt;</span>p<span class="token operator">></span>BBBBBBBBBBBBBB         <span class="token number">888888888888888888</span>         BBBBBBBBBBBBBBBBBB         <span class="token number">88888888888888888888</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"footer1"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>h4<span class="token operator">></span>footer<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre></li></ol><h4 id="通过中间自适应盒子的padding实现三栏布局"><a href="#通过中间自适应盒子的padding实现三栏布局" class="headerlink" title="通过中间自适应盒子的padding实现三栏布局"></a>通过中间自适应盒子的padding实现三栏布局</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">body </span><span class="token punctuation">{</span>            <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">700</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#container</span> </span><span class="token punctuation">{</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#mid</span>,        <span class="token id">#left</span>,        <span class="token id">#right</span> </span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#mid</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> salmon<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#left</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token id">#right</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>container<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>mid<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>mid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>left<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>right<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="通过flex布局实现"><a href="#通过flex布局实现" class="headerlink" title="通过flex布局实现"></a>通过flex布局实现</h4><ul><li>通过<code>flex</code>布局实现三栏布局,较为简单,但存在兼容性问题.低版本IE不支持</li></ul><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">html,        body </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span>,        <span class="token class">.right</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">106</span>, <span class="token number">238</span>, <span class="token number">194</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.center</span> </span><span class="token punctuation">{</span>            <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">38</span>, <span class="token number">50</span>, <span class="token number">211</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="流体布局"><a href="#流体布局" class="headerlink" title="流体布局"></a>流体布局</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.left</span> </span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.main</span> </span><span class="token punctuation">{</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">220</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><blockquote><p>左右模块各自向左右浮动，并设置中间模块的 margin 值使中间模块宽度自适应。</p></blockquote><p>缺点就是主要内容无法最先加载，当页面内容较多时会影响用户体验。</p><h4 id="BFC-三栏布局"><a href="#BFC-三栏布局" class="headerlink" title="BFC 三栏布局"></a>BFC 三栏布局</h4><blockquote><p>该布局,主要内容模块无法最先加载，当页面中内容较多时会影响用户体验</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.left</span> </span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.main</span> </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="Table-布局"><a href="#Table-布局" class="headerlink" title="Table 布局"></a>Table 布局</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span>, <span class="token class">.main</span>, <span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.main</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><blockquote><p>无法设置栏间距</p></blockquote><h4 id="绝对定位布局"><a href="#绝对定位布局" class="headerlink" title="绝对定位布局"></a>绝对定位布局</h4><blockquote><p>该布局,在移动端可能会产生,弹出输入法遮挡问题</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.main</span> </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">120</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.left</span> </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="使用calc-实现三栏布局"><a href="#使用calc-实现三栏布局" class="headerlink" title="使用calc()实现三栏布局"></a>使用calc()实现三栏布局</h4><blockquote><p>注意点,需要给<code>container</code>设置 <code>font-size: 0;</code>来解决代码中有换行,空格导致的超宽问题</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">* </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.container</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>             <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.container</span>>div </span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.main</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100%</span> - <span class="token number">200</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.right</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>曲线运动</title>
      <link href="/2019/05/21/qu-xian-yun-dong/"/>
      <url>/2019/05/21/qu-xian-yun-dong/</url>
      
        <content type="html"><![CDATA[<ul><li>由CSS3实现曲线运动——贝塞尔曲线(cubic-bezier)</li></ul><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token comment" spellcheck="true">/* //定义球的初始值，位置是绝对定位； */</span>        <span class="token selector"><span class="token class">.ball</span> </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/* //定义动画的流程 */</span>        <span class="token selector"><span class="token class">.run_top_right</span> </span><span class="token punctuation">{</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span>                run-right-right <span class="token number">3</span>s <span class="token number">0.4</span>s <span class="token number">1</span> linear,                run-right-top <span class="token number">3</span>s <span class="token number">0.4</span>s <span class="token number">1</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">.99</span>, <span class="token number">0.08</span>, <span class="token number">0.29</span>, <span class="token number">0.95</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> forwards<span class="token punctuation">;</span>            <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">;</span>            <span class="token property">animation-direction</span><span class="token punctuation">:</span> alternate<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/* //向上走的动画初始及结尾值 */</span>        <span class="token atrule"><span class="token rule">@keyframes</span> run-right-top</span> <span class="token punctuation">{</span>            <span class="token selector">0% </span><span class="token punctuation">{</span>                <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">800</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/* //向上右的动画初始及结尾值 */</span>        <span class="token atrule"><span class="token rule">@keyframes</span> run-right-right</span> <span class="token punctuation">{</span>            <span class="token selector">0% </span><span class="token punctuation">{</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ball run_top_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Promise串行调用接口</title>
      <link href="/2019/05/15/chuan-xing-diao-yong-jie-kou.1/"/>
      <url>/2019/05/15/chuan-xing-diao-yong-jie-kou.1/</url>
      
        <content type="html"><![CDATA[<h4 id="串行使用Promise调用接口"><a href="#串行使用Promise调用接口" class="headerlink" title="串行使用Promise调用接口"></a>串行使用Promise调用接口</h4><ul><li>碰到需求,需要根据ID,依次查询一组图片</li><li>以前有使用Promise,并行查询接口,使用Promise.all()等最后所有数据返回之后,渲染到页面中</li><li>后来查询资料之后,模拟出调用接口,使用串行方式查询接口</li><li>废话少说,代码如下</li></ul><hr><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//串行Promise</span><span class="token keyword">function</span> <span class="token function">serialPromise</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//使用  Promise.resolve() 可以在后续中使用 .then进行链式操作</span>    arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>fn <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        res <span class="token operator">=</span> res            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`%c</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token string">"color:red"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// let timer =setTimeout(() => {</span><span class="token comment" spellcheck="true">//   console.log(111111);</span><span class="token comment" spellcheck="true">// }, 1000);</span><span class="token comment" spellcheck="true">// console.log(typeof timer);  //number ,setTimeout 返回一个id</span><span class="token keyword">let</span> ajaxTest <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> flag <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//接口查询成功</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%c--------查询成功的处理--------"</span><span class="token punctuation">,</span> <span class="token string">"color:blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%cId"</span> <span class="token operator">+</span> data<span class="token punctuation">,</span> <span class="token string">"color:blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//查询失败,继续查询</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%c--------查询失败,重新调用--------"</span><span class="token punctuation">,</span> <span class="token string">"color:orange"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">ajaxTest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//调用接口错误,reject</span>            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">//由一组ID,通过map方法返回一组带有Promise的ajax请求</span>    <span class="token string">"20190515_1010"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1210"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1310"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1410"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1510"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1610"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1710"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1810"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1910"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_2010"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> item<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`%cindex:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token string">"color:green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//记录调用的次数</span>            <span class="token function">ajaxTest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">serialPromise</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="代码简单说明"><a href="#代码简单说明" class="headerlink" title="代码简单说明"></a>代码简单说明</h4><ul><li>arr数组,由一组ID,通过map方法返回一组带有Promise的ajax请求</li><li>ajaxTest请求,使用定时器,模拟调用接口,调用时,有1/2的失败率,1/4成功率,1/4接口调用错误</li><li>serialPromise串行调用接口,先声明变量<code>res</code>,Promise.resolve() ,便于使用<code>.then</code>链式操作,<br>然后使用<code>arr.map</code> 依次调用<code>arr</code>中的每个ajaxTest请求</li></ul><h4 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h4><ul><li>Chrome中代码执行效果演示,话说1/2的失败几率,连续失败了9次,脸真黑<br><img src="/images/serialPromise.png" alt></li></ul><h4 id="使用async串行调用接口"><a href="#使用async串行调用接口" class="headerlink" title="使用async串行调用接口"></a>使用async串行调用接口</h4><ul><li>可以进一步使用<code>async</code> 串行调用</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> ajaxTest <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> flag <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//接口查询成功</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%c--------查询成功的处理--------"</span><span class="token punctuation">,</span> <span class="token string">"color:blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%cId"</span> <span class="token operator">+</span> data<span class="token punctuation">,</span> <span class="token string">"color:blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//查询失败,继续查询</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%c--------查询失败,重新调用--------"</span><span class="token punctuation">,</span> <span class="token string">"color:orange"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">ajaxTest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">//由一组ID,通过map方法返回一组带有Promise的ajax请求</span>    <span class="token string">"20190515_1010"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1210"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1310"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1410"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1510"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1610"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1710"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1810"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_1910"</span><span class="token punctuation">,</span>    <span class="token string">"20190515_2010"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> item<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`%cindex:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token string">"color:green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">ajaxTest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">function</span> <span class="token function">serialPromise</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> undefined<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">serialPromise</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>主要使用<code>async</code>改造<code>serialPromise</code>函数,使用<code>for..of</code>循环,内部使用了<code>await</code>实现串行</li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>console用法</title>
      <link href="/2019/04/30/console-yong-fa/"/>
      <url>/2019/04/30/console-yong-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="Console-对象提供对浏览器控制台的接入-可以在任何全局对象中访问"><a href="#Console-对象提供对浏览器控制台的接入-可以在任何全局对象中访问" class="headerlink" title="Console 对象提供对浏览器控制台的接入,可以在任何全局对象中访问"></a>Console 对象提供对浏览器控制台的接入,可以在任何全局对象中访问</h2><h3 id="1-显示信息的命令"><a href="#1-显示信息的命令" class="headerlink" title="1.显示信息的命令"></a>1.显示信息的命令</h3><p>congsole.log()、console.error()、console.warn()、console.info()</p><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"log ==> "</span><span class="token punctuation">,</span> json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"error ==> "</span><span class="token punctuation">,</span> json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"warn ==> "</span><span class="token punctuation">,</span> json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"info ==> "</span><span class="token punctuation">,</span> json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><img src="/images/console/1.png" alt></p><p>每一个结果在日志中都有不同的样式，可以使用浏览器控制台的日志筛选功能筛选出感兴趣的日志信息。<br>有两种途径使用这些方法，你可以简单的传入一组对象，其中的字符串对象会被连接到一起，输出到控制台。或者你可以传入包含零个或多个的替换的字符串，后面跟着被替换的对象列表。</p><p> <code>%o</code> , <code>%O</code>  打印 JavaScript 对象，可以是整数、字符串或是 JSON 数据<br> <code>%d</code> , <code>%i</code>  打印整数<br> <code>%s</code>         打印字符串<br> <code>%f</code>         打印浮点数                                             </p><ul><li>还可以使用<code>&quot;%c&quot;</code>为打印内容定义样式:<pre class=" language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"%cMy stylish message"</span><span class="token punctuation">,</span> <span class="token string">"color: red; font-style: italic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><img src="/images/console/2.png" alt></li></ul><h3 id="2-console-dir"><a href="#2-console-dir" class="headerlink" title="2.console.dir()"></a>2.console.dir()</h3><p><code>console.dir()</code>可以显示一个对象所有的属性和方法。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> dog<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'dog'</span><span class="token punctuation">,</span>    bark <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"汪汪汪"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span></code></pre><p><img src="/images/console/3.png" alt></p><h3 id="3-分组显示"><a href="#3-分组显示" class="headerlink" title="3.分组显示"></a>3.分组显示</h3><p>如果信息太多，可以分组显示，用到的方法是<code>console.group()</code>和<code>console.groupEnd()</code>。</p><pre class=" language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"This is the outer level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Level 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Level 3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"More of level 3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">groupEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Back to level 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">groupEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Back to the outer level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/images/console/4.png" alt></p><h3 id="4-console-table"><a href="#4-console-table" class="headerlink" title="4.console.table()"></a>4.console.table()</h3><p>console.table()非常美观打印数组和对象</p><pre class=" language-js"><code class="language-js"> <span class="token keyword">const</span> typeOfConsole <span class="token operator">=</span> <span class="token punctuation">[</span>   <span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">'log'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'standard'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'standard'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">'table'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'standard'</span><span class="token punctuation">}</span>    <span class="token punctuation">]</span> console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>typeOfConsole<span class="token punctuation">)</span>   <span class="token keyword">const</span> mySocial <span class="token operator">=</span> <span class="token punctuation">{</span>   faceboo<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   linkedin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   instagram<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   twitter<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>mySocial<span class="token punctuation">)</span></code></pre><p><img src="/images/console/5.png" alt></p><h3 id="5-计次计时功能"><a href="#5-计次计时功能" class="headerlink" title="5.计次计时功能"></a>5.计次计时功能</h3><ul><li><code>console.count()</code> 计算并输出相同的类型的次数</li><li><code>console.time()</code>和<code>console.timeEnd()</code>，用来计算代码的运行时间。<pre class=" language-js"><code class="language-js"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">'added'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">"计时器一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>　　　　<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>　　<span class="token punctuation">}</span>　　console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">"计时器一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><p><img src="/images/console/6.png" alt></p><h3 id="6-断言"><a href="#6-断言" class="headerlink" title="6.断言"></a>6.断言</h3><p><code>console.assert()</code>用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span> result <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token number">2019</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span>year <span class="token operator">==</span> <span class="token number">9102</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/images/console/7.png" alt></p><h3 id="7-追踪"><a href="#7-追踪" class="headerlink" title="7.追踪"></a>7.追踪</h3><p><code>console.trace()</code>用来追踪函数的调用轨迹</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/images/console/8.png" alt></p><h2 id="移动端调试方案-vConsole"><a href="#移动端调试方案-vConsole" class="headerlink" title="移动端调试方案 vConsole"></a>移动端调试方案 <code>vConsole</code></h2><p>一个轻量、可拓展、针对手机网页的前端开发者调试面板。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>查看 console 日志</li><li>查看网络请求</li><li>查看页面 element 结构</li><li>查看 Cookies、localStorage 和 SessionStorage</li><li>手动执行 JS 命令行</li><li>自定义插件<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2>从vConsole GitHub仓库下载 <a href="https://github.com/Tencent/vConsole" target="_blank" rel="noopener">链接</a> 或者使用 npm 安装:<pre class=" language-js"><code class="language-js">npm install vconsole</code></pre>引入 dist/vconsole.min.js 到项目中：<pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"path/to/vconsole.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">// 初始化</span><span class="token keyword">var</span> vConsole <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello world'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>使用详情见<a href="(https://github.com/Tencent/vConsole">https://github.com/Tencent/vConsole</a>)</li></ul>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调试技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promise链式操作引出的EventLoop</title>
      <link href="/2019/04/08/promise-lian-shi-cao-zuo-bing-yin-chu-de-eventloop/"/>
      <url>/2019/04/08/promise-lian-shi-cao-zuo-bing-yin-chu-de-eventloop/</url>
      
        <content type="html"><![CDATA[<p>阅读此文章前需要有一定的 Promise 基础 ,若无,请移步阮一峰老师的 ES6 入门<a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">http://es6.ruanyifeng.com/#docs/promise</a></p><h4 id="此篇文章主要说下-Promise-的链式操作"><a href="#此篇文章主要说下-Promise-的链式操作" class="headerlink" title="此篇文章主要说下 Promise 的链式操作"></a>此篇文章主要说下 Promise 的链式操作</h4><p>我们经常会遇到依次请求多个接口,或者其他操作的情况<br>简单写下 Promise 如何处理优雅进行链式操作,先看以下代码</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Promise1</span><span class="token keyword">function</span> <span class="token function">Pro1</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"p1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">></span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token function">reject</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//模拟上传</span><span class="token keyword">function</span> <span class="token function">upLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`upLoad</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建3种情况</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//上传成功</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token function">upLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//上传失败可重新上传</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"upLoad err"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//代码层面错误,reject</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">default</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">Pro1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Pro1进入upLoad`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">...</span>      <span class="token operator">...</span>      <span class="token keyword">return</span> <span class="token function">upLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"完成upLoad"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">...</span>      <span class="token operator">...</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="promise-的调用"><a href="#promise-的调用" class="headerlink" title="promise 的调用"></a>promise 的调用</h5><p>可以看出,在 test 函数中,依次调用 Pro1,upLoad 两个函数,每个函数中返回的都是<code>Promise对象</code>,最后通过<code>catch</code>对两个函数进行错误处理</p><ol><li>在<code>Pro1</code>中,各有一半的几率返回<code>resolve</code>和<code>reject</code>函数.在 test 函数中,先调用 Pro1 函数,完成后返回 Promise 对象,<br>因而可以继续使用.then 方法. 在<code>第一个</code>.then 中继续调用 upload 方法</li><li>在<code>upload</code>中,三种情况分别返回:<ul><li><code>resolve</code>成功,</li><li>上传失败,重新上传.(此处 return upLoad 函数,进行自调)</li><li><code>reject</code>失败,</li></ul></li><li>完成<code>upLoad</code>后,在第二个.then 里进行书数据处理,其他想进行的操作.</li><li><code>Pro1</code>和<code>upLoad</code>如有<code>reject()</code>时,会进行<code>.catch</code>中的错误抛出</li></ol><h5 id="这样就完成的两个-Promise-对象的链式操作-多个层级的链式操作类似"><a href="#这样就完成的两个-Promise-对象的链式操作-多个层级的链式操作类似" class="headerlink" title="这样就完成的两个 Promise 对象的链式操作,多个层级的链式操作类似"></a>这样就完成的两个 Promise 对象的链式操作,多个层级的链式操作类似</h5><h4 id="使用-Promise-对象-逻辑可以更清晰-函数自调也更方便"><a href="#使用-Promise-对象-逻辑可以更清晰-函数自调也更方便" class="headerlink" title="使用 Promise 对象,逻辑可以更清晰,函数自调也更方便."></a>使用 Promise 对象,逻辑可以更清晰,函数自调也更方便.</h4><h4 id="看到这里-想起了前几天看到的一道题目"><a href="#看到这里-想起了前几天看到的一道题目" class="headerlink" title="看到这里,想起了前几天看到的一道题目"></a>看到这里,想起了前几天看到的一道题目</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"promise1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"then11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"promise2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"then21"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"then23"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"then12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Promise 为了解决回调地狱,但是有时候也不乏 Promise 的嵌套</p><h4 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h4><h5 id="主要配合-Promise-考察-EventLoop"><a href="#主要配合-Promise-考察-EventLoop" class="headerlink" title="主要配合 Promise 考察 EventLoop"></a>主要配合 Promise 考察 EventLoop</h5><ol><li><p>所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。</p></li><li><p>主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件。</p></li><li><p>一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。</p></li><li><p>主线程不断重复上面的第三步。</p></li></ol><h5 id="即-js-分为"><a href="#即-js-分为" class="headerlink" title="即 js 分为:"></a>即 js 分为:</h5><ul><li><p>同步任务和异步任务</p></li><li><p>宏任务(macrotask)和微任务(microtask)</p></li><li><p>主线程（同步任务） - 所有同步任务都在主线程上执行，形成一个执行栈。</p></li><li><p>任务队列（异步任务）：当异步任务有了结果，就在任务队列中放一个事件。</p></li><li><p>JS 运行机制：当”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”</p></li></ul><p>其中宏任务包括：script（主代码）, setTimeout, setInterval, setImmediate, I/O, UI rendering</p><p>微任务包括：process.nextTick（Nodejs）, Promises, Object.observe, MutationObserver</p><p>这里我们注意到，宏任务里有 script，也就是我们的正常执行的主代码</p><h5 id="事件循环-EventLoop"><a href="#事件循环-EventLoop" class="headerlink" title="事件循环 EventLoop"></a>事件循环 EventLoop</h5><blockquote><p>主线程从”任务队列”中读取事件，这个过程是循环不断的，所以整个的这种运行机制又称为 Event Loop（事件循环）。此机制具体如下:主线程会不断从任务队列中按顺序取任务执行，每执行完一个任务都会检查 microtask 队列是否为空（执行完一个任务的具体标志是函数执行栈为空），如果不为空则会一次性执行完所有 microtask。然后再进入下一个循环去任务队列中取下一个任务执行。</p></blockquote><p>总结了下过程：script(宏任务) - 清空微任务队列 - 执行一个宏任务 - 清空微任务队列 - 执行一个宏任务， 如此往复。</p><ul><li>先执行 script 里的同步代码（此时是宏任务）。碰到异步任务，放到任务队列。</li><li>查找任务队列有没有微任务，有就把此时的微任务全部按顺序执行 （这就是为什么 promise 会比 setTimeout 先执行，因为先执行的宏任务是同步代码，setTimeout 被放进任务队列了，setTimeout - 又是宏任务，在它之前先得执行微任务(就比如 promise)）。</li><li>执行一个宏任务（先进到队列中的那个宏任务），再把这次宏任务里的宏任务和微任务放到任务队列。</li><li>…重复 2、3 步骤</li></ul><h5 id="要做到心中有队列，有先进先出的概念"><a href="#要做到心中有队列，有先进先出的概念" class="headerlink" title="要做到心中有队列，有先进先出的概念"></a>要做到心中有队列，有先进先出的概念</h5><!-- 如图: --><!-- ![EventLoop图解](https://dev.tencent.com/u/summerpen/p/summerpen/git/blob/master/medias/JS/EventLoop.png) --><h5 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h5><blockquote><p>promise1<br>then11<br>promise2<br>then21<br>then12<br>then23</p></blockquote><blockquote><p>第一轮</p><ul><li>current task: promise1 是当之无愧的立即执行的一个函数，参考上一章节的 executor，立即执行输出<code>promise1</code></li><li>micro task queue: [promise1 的第一个 then]<br>第二轮</li><li>current task: then1 执行中，立即输出了 <code>then11</code> 以及新 promise2 的 <code>promise2</code></li><li>micro task queue: [新 promise2 的 then 函数,以及 promise1 的第二个 then 函数]<br>第三轮</li><li>current task: 新 promise2 的 then 函数输出 <code>then21</code> 和 promise1 的第二个 then 函数输出 <code>then12</code>。</li><li>micro task queue: [新 promise2 的第二 then 函数]<br>第四轮</li><li>current task: 新 promise2 的第二 then 函数输出 <code>then23</code></li><li>micro task queue: []</li><li>END</li></ul></blockquote><h3 id="THE-END"><a href="#THE-END" class="headerlink" title="THE END"></a>THE END</h3>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coding托管</title>
      <link href="/2019/04/05/bo-ke-tuo-guan-coding-ping-tai/"/>
      <url>/2019/04/05/bo-ke-tuo-guan-coding-ping-tai/</url>
      
        <content type="html"><![CDATA[<h1 id="托管Coding平台"><a href="#托管Coding平台" class="headerlink" title="托管Coding平台"></a>托管Coding平台</h1><p>博客在GitHub上托管时,访问速度不是很友好.就又在Coding(升级为腾讯云开发者平台)平台上同步了一份.<br><!-- ![](/images/1.jpg) --></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初次搭建博客</title>
      <link href="/2019/04/02/chu-ci-da-jian-bo-ke/"/>
      <url>/2019/04/02/chu-ci-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="Fir"><a href="#Fir" class="headerlink" title="Fir"></a>Fir</h1><p>根据教程简单搭建下自己的博客,第一次,就写下工作中偶尔用到的 md 文件吧</p><h3 id="Markdown-是什么？"><a href="#Markdown-是什么？" class="headerlink" title="Markdown 是什么？"></a>Markdown 是什么？</h3><p>Markdown 是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以 HTML 格式发布。<br>Markdown 也可以理解为将以 MARKDOWN 语法编写的语言转换成 HTML 内容的工具。</p><h3 id="谁创造了它？"><a href="#谁创造了它？" class="headerlink" title="谁创造了它？"></a>谁创造了它？</h3><p>它由 Aaron Swartz 和 John Gruber 共同设计，Aaron Swartz 就是那位于去年（2013 年 1 月 11 日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。<br>他有着足以让你跪拜的人生经历：</p><ul><li>14 岁参与 RSS 1.0 规格标准的制订。</li><li>2004 年入读斯坦福，之后退学。</li><li>2005 年创建 Infogami，之后与 Reddit 合并成为其合伙人。</li><li>2010 年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动， 最终该提案被撤回。</li><li>2011 年 7 月 19 日，因被控从 MIT 和 JSTOR 下载 480 万篇学术论文并以免费形式 上传于网络被捕。</li><li>2013 年 1 月自杀身亡。</li></ul><h3 id="为什么要使用它？"><a href="#为什么要使用它？" class="headerlink" title="为什么要使用它？"></a>为什么要使用它？</h3><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。</li><li>兼容 HTML，可以转换为 HTML 格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持 Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱 Word（我不是认真的）。</li></ul><h3 id="怎么使用？"><a href="#怎么使用？" class="headerlink" title="怎么使用？"></a>怎么使用？</h3><p>如果不算扩展，Markdown 的语法绝对简单到让你爱不释手。<br>Markdown 语法主要分为如下几大部分： 标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，符号’`’。</p><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>两种形式：</p><ul><li><ol><li>使用=和-标记一级和二级标题。</li></ol></li></ul><pre><code>一级标题=========二级标题---------</code></pre><p>效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><ul><li>2）使用#，可表示 1-6 级标题。</li></ul><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p>效果：</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。</p><h4 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h4><p>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如：</p><pre><code>&gt; 区块引用&gt;&gt; 嵌套引用</code></pre><p>效果：</p><blockquote><p>区块引用</p><blockquote><p>嵌套引用</p></blockquote></blockquote><h4 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h4><p>代码区块的建立是在每行加上 4 个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p><p>export default class Page extends Component{<br>render(){<br>return(</p><p><div></div><br>)<br>}<br>}</p><p>代码区块：</p><pre><code>export default class Page extends Component{    render(){        return(            &lt;div&gt;&lt;/div&gt;        )    }}</code></pre><p>注意:需要和普通段落之间存在空行。</p><h4 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h4><p>在强调内容两侧分别加上*或者_，如：</p><pre><code>*斜体*，_斜体_**粗体**，__粗体__</code></pre><p>效果：</p><p>_斜体_，_斜体_<br><strong>粗体</strong>，<strong>粗体</strong></p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>使用·、+、或-标记无序列表，如：</p><pre><code>-（+_） 第一项 -（+_） 第二项 - （+\*）第三项</code></pre><p>注意：标记后面最少有一个<em>空格</em>或<em>制表符</em>。若不在引用区块中，必须和前方段落之间存在空行。</p><p>效果：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表的标记方式是将上述的符号换成数字,并辅以.，如：</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><p>效果：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>分割线最常使用就是三个或以上*，还可以使用-和_。</p><pre><code>- - -</code></pre><p>效果</p><hr><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>链接可以由两种形式生成：行内式和参考式。<br>行内式：</p><pre><code>[https://juejin.im/timeline](https://juejin.im/timeline)</code></pre><p>效果<br><a href="https://juejin.im/timeline" target="_blank" rel="noopener">https://juejin.im/timeline</a></p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个！。</p><pre><code>![Aaron_Swartz](img/20190402/Aaron_Swartz.jpg)</code></pre><h4 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠\"></a>反斜杠\</h4><p>相当于反转义作用。使符号成为普通符号。</p><h4 id="符号’-’"><a href="#符号’-’" class="headerlink" title="符号’`’"></a>符号’`’</h4><p>起到标记作用。如：</p><pre><code>`ctrl+a`</code></pre><p>效果：</p><p><code>ctrl+a</code></p><h3 id="尝试一下"><a href="#尝试一下" class="headerlink" title="尝试一下"></a>尝试一下</h3><ul><li>Chrome 下的插件诸如 stackedit 与 markdown-here 等非常方便，也不用担心平台受限。</li><li>在线的 dillinger.io 评价也不错</li><li>Windowns 下的 MarkdownPad 也用过，不过免费版的体验不是很好。</li><li>Mac 下的 Mou 是国人贡献的，口碑很好。</li><li>Linux 下的 ReText 不错。</li><li>VSCode 中的 markdown 预览插件也是可以的。</li></ul><p>当然，最终境界永远都是笔下是语法，心中格式化 :)。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
